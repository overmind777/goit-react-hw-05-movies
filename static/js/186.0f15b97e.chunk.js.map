{"version":3,"file":"static/js/186.0f15b97e.chunk.js","mappings":"uMAmCA,UA9BgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACRE,GAAkBC,EAAAA,EAAAA,GAAQC,EAAAA,GAAkBJ,GAArCK,GAA6CC,EAAAA,EAAAA,GAAAJ,EAAA,GAAtC,GAEd,OAAKG,GAKHE,EAAAA,EAAAA,MAAA,OAAAC,SAAA,CACsB,IAAnBH,EAAQI,SACPF,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEE,EAAAA,EAAAA,KAAA,MAAAF,SAAI,mBACJE,EAAAA,EAAAA,KAAA,MAAAF,SACU,OAAPH,QAAO,IAAPA,OAAO,EAAPA,EAASM,KAAI,SAAAC,GAAM,OAClBL,EAAAA,EAAAA,MAAA,MAAAC,SAAA,EACEE,EAAAA,EAAAA,KAAA,MAAAF,SAAKI,EAAOC,UACZH,EAAAA,EAAAA,KAAA,KAAAF,SAAII,EAAOE,YAFJF,EAAOG,GAGX,SAKO,IAAnBV,EAAQI,SACPC,EAAAA,EAAAA,KAAA,OAAAF,SAAK,kDAnBFE,EAAAA,EAAAA,KAAA,OAAAF,SAAK,cAuBhB,C","sources":["components/Reviews/Reviews.jsx"],"sourcesContent":["import useHttp from 'hooks/useHttp';\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchReviewsById } from 'servises/api';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews] = useHttp(fetchReviewsById, movieId);\n\n  if (!reviews) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div>\n      {reviews.length !== 0 && (\n        <div>\n          <h2>Movie Reviews</h2>\n          <ul>\n            {reviews?.map(review => (\n              <li key={review.id}>\n                <h4>{review.author}</h4>\n                <p>{review.content}</p>\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n      {reviews.length === 0 && (\n        <div>We don't have any reviews for this movie.</div>\n      )}\n    </div>\n  );\n};\n\nexport default Reviews;\n"],"names":["movieId","useParams","_useHttp","useHttp","fetchReviewsById","reviews","_slicedToArray","_jsxs","children","length","_jsx","map","review","author","content","id"],"sourceRoot":""}